<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<http use-expressions="true" pattern="/admin/**">  <!-- pattern="/admin/**" -->
		<csrf disabled="true"/>
		<intercept-url pattern="/admin" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		<!-- <intercept-url pattern="/admin/news" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/admin/search/**" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/admin/news/edit/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/news/del/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/news/add" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN')" />
		
		<intercept-url pattern="/admin/news/**" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/admin/cats" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/admin/cat/add" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN')" />
		<intercept-url pattern="/admin/users" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/admin/user/edit/**" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		 -->
		<!-- <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> -->
		<!-- <intercept-url pattern="/**" access="permitAll"/> --> <!--  permitAll: all đều truy cập được -->
		
		<form-login login-page='/auth/login' login-processing-url="/admin/auth/login"
            default-target-url="/admin" always-use-default-target="false"
            authentication-failure-url="/auth/login?msg" username-parameter="username"
            password-parameter="password" />  
 
        <logout logout-url="/admin/auth/logout" logout-success-url="/auth/login"
            delete-cookies="JSESSIONID" invalidate-session="true" />
            
        <access-denied-handler error-page="/403"/>
    </http>
    
    <http>
		<csrf disabled="true"/>
		<intercept-url pattern="/mycourse" access="hasAnyRole('ROLE_EDITOR', 'ROLE_ADMIN','ROLE_USER')" />
		
		<intercept-url pattern="/**" access="permitAll"/>  <!-- permitAll: all đều truy cập được -->
		
		<form-login login-page='/login' login-processing-url="/login"
            default-target-url="/mycourses" always-use-default-target="false"
            authentication-failure-url="/login?msg=Sai username or password!" username-parameter="username"
            password-parameter="password" />  
 
        <logout logout-url="/logout" logout-success-url="/login"
            delete-cookies="JSESSIONID" invalidate-session="true" />
            
        <access-denied-handler error-page="/403"/>
    </http>
    
    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
    
    <authentication-manager>
        <!-- authentication from database -->
        <authentication-provider>
           	<password-encoder ref="bcryptEncoder"/> 
            
            <jdbc-user-service data-source-ref="dataSource" 
                users-by-username-query="select username, password, enable from quantrivien where username=?"
                authorities-by-username-query="select username, concat('ROLE_', name) role from quantrivien as q inner join roles as r on r.id_role = q.id_role where username=?" />
        	</authentication-provider>
        
        <authentication-provider>
           	<password-encoder ref="bcryptEncoder"/> 
            
           <jdbc-user-service data-source-ref="dataSource" 
                users-by-username-query="select username, password, enable from giangvien where username=?"
                authorities-by-username-query="select username, concat('ROLE_', name) role from giangvien as g inner join roles as r on r.id_role = g.id_role where username=?" />
        </authentication-provider>
        
        <authentication-provider>
           	<password-encoder ref="bcryptEncoder"/> 
            
           <jdbc-user-service data-source-ref="dataSource" 
                users-by-username-query="select username, password, enable from hocvien where username=?"
                authorities-by-username-query="select username, concat('ROLE_', name) role from hocvien as h inner join roles as r on r.id_role = h.id_role where username=?" />
        </authentication-provider>
    </authentication-manager>

</beans:beans>